# Generated by Django 4.1.6 on 2023-03-01 17:34

import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tool.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='boat_notifier',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('boat_tokan', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'boat_notifier',
            },
        ),
        migrations.CreateModel(
            name='cl_Brand',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_brandname', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Brand',
            },
        ),
        migrations.CreateModel(
            name='cl_Googlechat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_status', models.CharField(default='Inactive', max_length=100)),
                ('ch_language', models.CharField(default='English', max_length=100)),
                ('ch_Connection', models.CharField(max_length=100, null=True)),
                ('ch_testconnection', models.CharField(max_length=100, null=True)),
                ('txt_message', models.TextField()),
                ('ch_Prepare_payload_callback', models.CharField(max_length=100, null=True)),
                ('ch_Process_response_callback', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Googlechat',
            },
        ),
        migrations.CreateModel(
            name='cl_ios_version',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_iosname', models.CharField(max_length=100, null=True)),
                ('ch_brandname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_brand')),
            ],
            options={
                'db_table': 'cl_ios_version',
            },
        ),
        migrations.CreateModel(
            name='cl_Itsmwebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_status', models.CharField(default='Inactive', max_length=100)),
                ('ch_language', models.CharField(default='English', max_length=100)),
                ('ch_Connection', models.CharField(max_length=100, null=True)),
                ('ch_testconnection', models.CharField(max_length=100, null=True)),
                ('txt_headers', models.TextField()),
                ('txt_json_data', models.TextField()),
                ('Prepare_payload_callback', models.CharField(max_length=100, null=True)),
                ('Process_response_callback', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Itsmwebhook',
            },
        ),
        migrations.CreateModel(
            name='cl_Microsoft_Teams_notification',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_status', models.CharField(default='Inactive', max_length=100)),
                ('ch_language', models.CharField(default='English', max_length=100)),
                ('ch_Connection', models.CharField(max_length=100, null=True)),
                ('ch_testconnection', models.CharField(max_length=100, null=True)),
                ('txt_message', models.TextField()),
                ('ch_Attributes_forms', models.CharField(max_length=100, null=True)),
                ('ch_modify_button', models.CharField(max_length=100, null=True)),
                ('b_delete_button', models.BooleanField()),
                ('ch_Prepare_payload_callback', models.CharField(max_length=100, null=True)),
                ('ch_Process_response_callback', models.CharField(max_length=100, null=True)),
                ('b_other_action', models.BooleanField()),
                ('ch_other_action_code', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Microsoft_Teams_notification',
            },
        ),
        migrations.CreateModel(
            name='cl_model',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_modelname', models.CharField(max_length=100, null=True)),
                ('ch_brandname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_brand')),
            ],
            options={
                'db_table': 'cl_model',
            },
        ),
        migrations.CreateModel(
            name='cl_network_type',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_nname', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_network_type',
            },
        ),
        migrations.CreateModel(
            name='cl_New_change',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_status', models.CharField(default='new', max_length=100)),
                ('ch_category', models.CharField(max_length=100, null=True)),
                ('ch_title', models.CharField(max_length=100, null=True)),
                ('dt_start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('dt_Updated_date', models.DateTimeField(default=datetime.datetime.now)),
                ('txt_fallback_plan', models.CharField(max_length=100, null=True)),
                ('txt_description', models.CharField(max_length=100, null=True)),
                ('ch_assign_agent', models.CharField(default='Deallocated', max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_New_change',
            },
        ),
        migrations.CreateModel(
            name='cl_New_organization',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('ch_code', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=50, null=True)),
                ('ch_delivery_model', models.CharField(max_length=100, null=True)),
                ('ch_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_New_organization')),
            ],
            options={
                'db_table': 'cl_New_organization',
            },
        ),
        migrations.CreateModel(
            name='cl_Oauth_google',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('e_login', models.EmailField(max_length=254)),
                ('ch_status', models.CharField(default='No Acess token', max_length=100)),
                ('ch_provider', models.CharField(default='Google', max_length=100)),
                ('txt_description', models.TextField()),
                ('ch_client_id', models.CharField(max_length=100, null=True)),
                ('ch_client_secret', models.CharField(max_length=100, null=True)),
                ('ch_scope', models.CharField(default='SMTP', max_length=100)),
                ('ch_advanced_scope', models.CharField(max_length=100, null=True)),
                ('ch_used_smtp', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Oauth_google',
            },
        ),
        migrations.CreateModel(
            name='cl_Oauth_mazure',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('e_login', models.EmailField(max_length=254)),
                ('ch_status', models.CharField(default='No Acess token', max_length=100)),
                ('ch_provider', models.CharField(default='Azure', max_length=100)),
                ('txt_description', models.TextField()),
                ('ch_client_id', models.CharField(max_length=100, null=True)),
                ('ch_client_secret', models.CharField(max_length=100, null=True)),
                ('ch_scope', models.CharField(default='SMTP', max_length=100)),
                ('ch_advanced_scope', models.CharField(max_length=100, null=True)),
                ('ch_used_smtp', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Oauth_mazure',
            },
        ),
        migrations.CreateModel(
            name='cl_os_family',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_fname', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_os_family',
            },
        ),
        migrations.CreateModel(
            name='cl_os_license',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('ch_usage_limit', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_perpetual', models.CharField(max_length=100, null=True)),
                ('dt_start_date', models.DateTimeField(auto_now=True)),
                ('dt_end_date', models.DateTimeField()),
                ('ch_key', models.CharField(max_length=100, null=True)),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_os_license',
            },
        ),
        migrations.CreateModel(
            name='cl_os_version',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_osname', models.CharField(max_length=100, null=True)),
                ('ch_fname', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_os_family')),
            ],
            options={
                'db_table': 'cl_os_version',
            },
        ),
        migrations.CreateModel(
            name='cl_Person',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_person_firstname', models.CharField(max_length=100, null=True)),
                ('ch_person_lastname', models.CharField(max_length=100, null=True)),
                ('ch_person_status', models.CharField(max_length=100, null=True)),
                ('ch_person_location', models.CharField(max_length=100, null=True)),
                ('ch_person_function', models.CharField(max_length=100, null=True)),
                ('ch_employee_number', models.CharField(max_length=100, null=True)),
                ('e_person_email', models.EmailField(max_length=254, null=True)),
                ('telegram_chatid', models.CharField(max_length=100, null=True)),
                ('ch_person_mobilenumber', models.CharField(max_length=200, null=True)),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Person',
            },
        ),
        migrations.CreateModel(
            name='cl_Rocketchat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_status', models.CharField(default='Inactive', max_length=100)),
                ('ch_language', models.CharField(default='English', max_length=100)),
                ('ch_Connection', models.CharField(max_length=100, null=True)),
                ('ch_testconnection', models.CharField(max_length=100, null=True)),
                ('txt_message', models.TextField()),
                ('ch_Prepare_payload_callback', models.CharField(max_length=100, null=True)),
                ('ch_Process_response_callback', models.CharField(max_length=100, null=True)),
                ('ch_Alias', models.CharField(max_length=100, null=True)),
                ('ch_Image_avtar', models.CharField(max_length=100, null=True)),
                ('Emoji_avtar', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Rocketchat',
            },
        ),
        migrations.CreateModel(
            name='cl_Service',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_ssname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
            ],
            options={
                'db_table': 'cl_Service',
            },
        ),
        migrations.CreateModel(
            name='cl_Service_subcategory',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_subname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_request_type', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
            ],
            options={
                'db_table': 'cl_Service_subcategory',
            },
        ),
        migrations.CreateModel(
            name='cl_Servicefamilies',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_sname', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Servicefamilies',
            },
        ),
        migrations.CreateModel(
            name='cl_Slacknotification',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_status', models.CharField(default='Inactive', max_length=100)),
                ('ch_language', models.CharField(default='English', max_length=100)),
                ('ch_Connection', models.CharField(max_length=100, null=True)),
                ('ch_testconnection', models.CharField(max_length=100, null=True)),
                ('txt_message', models.TextField()),
                ('ch_Attributes_forms', models.CharField(max_length=100, null=True)),
                ('ch_modify_button', models.CharField(max_length=100, null=True)),
                ('b_delete_button', models.BooleanField()),
                ('ch_Prepare_payload_callback', models.CharField(max_length=100, null=True)),
                ('ch_Process_response_callback', models.CharField(max_length=100, null=True)),
                ('b_other_action', models.BooleanField()),
                ('ch_other_action_code', models.CharField(max_length=100, null=True)),
                ('b_user_info', models.BooleanField()),
            ],
            options={
                'db_table': 'cl_Slacknotification',
            },
        ),
        migrations.CreateModel(
            name='cl_Slt',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('ch_priority', models.CharField(max_length=100, null=True)),
                ('ch_request_type', models.CharField(max_length=100, null=True)),
                ('ch_metric', models.CharField(max_length=100, null=True)),
                ('ch_value', models.CharField(max_length=100, null=True)),
                ('ch_unit', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Slt',
            },
        ),
        migrations.CreateModel(
            name='cl_Software',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_sofname', models.CharField(max_length=100, null=True)),
                ('ch_vendor', models.CharField(max_length=100, null=True)),
                ('chversion', models.CharField(max_length=100, null=True)),
                ('ch_type', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Software',
            },
        ),
        migrations.CreateModel(
            name='cl_Synchro_data_source',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(default='implementation', max_length=100)),
                ('txt_description', models.TextField()),
                ('ch_target_class', models.CharField(max_length=100, null=True)),
                ('ch_user', models.CharField(max_length=100, null=True)),
                ('ch_contact_notify', models.CharField(max_length=100, null=True)),
                ('url_icon_hyperlink', models.URLField()),
                ('url_Application_hyperlink', models.URLField()),
                ('ch_data_table', models.CharField(max_length=100, null=True)),
                ('ch_reconciliation_policy', models.CharField(max_length=100, null=True)),
                ('ch_action_on_zero', models.CharField(max_length=100, null=True)),
                ('ch_action_on_one', models.CharField(max_length=100, null=True)),
                ('ch_action_on_many', models.CharField(max_length=100, null=True)),
                ('ch_users_allowed', models.CharField(max_length=100, null=True)),
                ('ch_update_rules', models.CharField(max_length=100, null=True)),
                ('ch_delete_policy', models.CharField(max_length=100, null=True)),
                ('dt_full_load_interval', models.DateTimeField()),
                ('dt_retention_duration', models.DateTimeField()),
            ],
            options={
                'db_table': 'cl_Synchro_data_source',
            },
        ),
        migrations.CreateModel(
            name='cl_Team',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_teamname', models.CharField(max_length=100, null=True)),
                ('ch_teamstatus', models.CharField(max_length=100, null=True)),
                ('ch_team_function', models.CharField(max_length=100, null=True)),
                ('L1_Manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='L1_Manager', to='tool.cl_person')),
                ('L2_Manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='L2_Manager', to='tool.cl_person')),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Team',
            },
        ),
        migrations.CreateModel(
            name='cl_Webhook',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_status', models.CharField(default='Inactive', max_length=100)),
                ('ch_language', models.CharField(default='English', max_length=100)),
                ('ch_Connection', models.CharField(max_length=100, null=True)),
                ('ch_testconnection', models.CharField(max_length=100, null=True)),
                ('txt_message', models.TextField()),
                ('ch_method', models.CharField(max_length=100, null=True)),
                ('ch_headers', models.CharField(max_length=100, null=True)),
                ('ch_payload', models.CharField(max_length=100, null=True)),
                ('b_delete_button', models.BooleanField()),
                ('ch_Prepare_payload_callback', models.CharField(max_length=100, null=True)),
                ('ch_Process_response_callback', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'cl_Webhook',
            },
        ),
        migrations.CreateModel(
            name='CSV_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disc_Attachment', models.FileField(upload_to='')),
            ],
            options={
                'db_table': 'CSV_import',
            },
        ),
        migrations.CreateModel(
            name='email_notifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('host', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('use_SSL', models.BooleanField()),
                ('host_user', models.CharField(max_length=255)),
                ('host_password', models.CharField(max_length=255)),
                ('message', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'email_notifier',
            },
        ),
        migrations.CreateModel(
            name='roles',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=200, unique=True)),
                ('ch_m_a', models.CharField(default='off', max_length=50, null=True)),
                ('ch_m_e', models.CharField(default='off', max_length=50, null=True)),
                ('ch_m_d', models.CharField(default='off', max_length=50, null=True)),
                ('ch_m_v', models.CharField(default='off', max_length=50, null=True)),
                ('ch_m_approve', models.CharField(default='off', max_length=50, null=True)),
                ('ch_m_assign', models.CharField(default='off', max_length=50, null=True)),
                ('inci_m_a', models.CharField(default='off', max_length=50, null=True)),
                ('inci_m_d', models.CharField(default='off', max_length=50, null=True)),
                ('inci_m_e', models.CharField(default='off', max_length=50, null=True)),
                ('inci_m_v', models.CharField(default='off', max_length=50, null=True)),
                ('inci_m_approve', models.CharField(default='off', max_length=50, null=True)),
                ('inci_m_assign', models.CharField(default='off', max_length=50, null=True)),
                ('confi_m_a', models.CharField(default='off', max_length=50, null=True)),
                ('confi_m_e', models.CharField(default='off', max_length=50, null=True)),
                ('confi_m_d', models.CharField(default='off', max_length=50, null=True)),
                ('confi_m_v', models.CharField(default='off', max_length=50, null=True)),
                ('serv_m_a', models.CharField(default='off', max_length=50, null=True)),
                ('serv_m_e', models.CharField(default='off', max_length=50, null=True)),
                ('serv_m_d', models.CharField(default='off', max_length=50, null=True)),
                ('serv_m_v', models.CharField(default='off', max_length=50, null=True)),
                ('user_m_a', models.CharField(default='off', max_length=50, null=True)),
                ('user_m_e', models.CharField(default='off', max_length=50, null=True)),
                ('user_m_d', models.CharField(default='off', max_length=50, null=True)),
                ('user_m_v', models.CharField(default='off', max_length=50, null=True)),
                ('setting_a', models.CharField(default='off', max_length=50, null=True)),
                ('setting_e', models.CharField(default='off', max_length=50, null=True)),
                ('setting_d', models.CharField(default='off', max_length=50, null=True)),
                ('setting_v', models.CharField(default='off', max_length=50, null=True)),
                ('history_a', models.CharField(default='off', max_length=50, null=True)),
                ('history_e', models.CharField(default='off', max_length=50, null=True)),
                ('history_d', models.CharField(default='off', max_length=50, null=True)),
                ('history_v', models.CharField(default='off', max_length=50, null=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='sms_notifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('url', models.CharField(max_length=100)),
                ('sender_sms_password', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('sender', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'sms_notifier',
            },
        ),
        migrations.CreateModel(
            name='user_activity_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('action', models.CharField(max_length=200)),
                ('event', models.CharField(max_length=200)),
                ('resultcode', models.IntegerField()),
                ('duration', models.DateTimeField(default=datetime.datetime(2023, 3, 1, 17, 34, 42, 433450))),
            ],
            options={
                'db_table': 'user_activity_log',
            },
        ),
        migrations.CreateModel(
            name='tassign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ch_person_firstname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.cl_person')),
                ('ch_teamname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.cl_team')),
            ],
        ),
        migrations.CreateModel(
            name='cl_Web_server',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_wsname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('ch_system', models.CharField(max_length=100, null=True)),
                ('ch_path', models.CharField(max_length=100, null=True)),
                ('ch_software_license', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_software', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_software')),
            ],
            options={
                'db_table': 'cl_Web_server',
            },
        ),
        migrations.CreateModel(
            name='cl_Web_application',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_waname', models.CharField(max_length=100, null=True)),
                ('url_website', models.URLField()),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_webserver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_web_server')),
            ],
            options={
                'db_table': 'cl_Web_application',
            },
        ),
        migrations.CreateModel(
            name='cl_User_request',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_status', models.CharField(default='New', max_length=100)),
                ('ch_origin', models.CharField(max_length=100, null=True)),
                ('ch_title', models.CharField(max_length=100, null=True)),
                ('ch_request_type', models.CharField(max_length=100, null=True)),
                ('ch_impact', models.CharField(max_length=100, null=True)),
                ('ch_priority', models.CharField(max_length=100, null=True)),
                ('dt_start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('dt_Updated_date', models.DateTimeField(default=datetime.datetime.now)),
                ('dt_Request_Assign_date', models.DateTimeField(null=True)),
                ('txt_description', models.TextField()),
                ('ch_assign_agent', models.CharField(default='Deallocate', max_length=100)),
                ('ch_parent_change', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_change')),
                ('ch_parent_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_user_request')),
                ('ch_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_service')),
                ('ch_service_subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_service_subcategory')),
                ('fk_caller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_person')),
                ('fk_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_User_request',
            },
        ),
        migrations.CreateModel(
            name='cl_Sla',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_slname', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_slaprovider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('slts', models.ManyToManyField(to='tool.cl_slt')),
            ],
            options={
                'db_table': 'cl_Sla',
            },
        ),
        migrations.CreateModel(
            name='cl_Servicedelivery',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_sdname', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Servicedelivery',
            },
        ),
        migrations.AddField(
            model_name='cl_service_subcategory',
            name='ch_sla',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_sla'),
        ),
        migrations.AddField(
            model_name='cl_service',
            name='ch_service_subcategory',
            field=models.ManyToManyField(to='tool.cl_service_subcategory'),
        ),
        migrations.AddField(
            model_name='cl_service',
            name='ch_sprovider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cl_new_organization_ch_sprovider', to='tool.cl_new_organization'),
        ),
        migrations.CreateModel(
            name='cl_Server',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_sname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('ch_location', models.CharField(max_length=100, null=True)),
                ('i_management_ip', models.IntegerField()),
                ('ch_ram', models.CharField(max_length=100, null=True)),
                ('ch_cpu', models.CharField(max_length=100, null=True)),
                ('i_rack_unit', models.IntegerField()),
                ('i_serial_number', models.IntegerField()),
                ('i_asset_number', models.IntegerField()),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('dt_purchase_date', models.DateTimeField()),
                ('dt_end_of_warranty', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_brand')),
                ('ch_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_model')),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_os_family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_os_family')),
                ('i_os_license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_os_license')),
                ('i_os_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_os_version')),
            ],
            options={
                'db_table': 'cl_Server',
            },
        ),
        migrations.CreateModel(
            name='cl_Providercontract',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_pname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(default='new', max_length=100)),
                ('ch_contract_type', models.CharField(max_length=100, null=True)),
                ('dt_start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('dt_end_date', models.DateTimeField(default=datetime.datetime.now)),
                ('i_cost_unit', models.IntegerField()),
                ('i_cost', models.IntegerField()),
                ('i_cost_currency', models.CharField(max_length=100)),
                ('i_billing_frequency', models.IntegerField()),
                ('txt_description', models.TextField()),
                ('ch_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cl_new_organization_ch_customer', to='tool.cl_new_organization')),
                ('ch_pcprovider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cl_new_organization_ch_pcprovider', to='tool.cl_new_organization')),
                ('ch_services', models.ManyToManyField(to='tool.cl_service')),
            ],
            options={
                'db_table': 'cl_Providercontract',
            },
        ),
        migrations.AddField(
            model_name='cl_person',
            name='ch_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_team'),
        ),
        migrations.CreateModel(
            name='cl_Pc_software',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_pcname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('ch_system', models.CharField(max_length=100, null=True)),
                ('ch_software_license', models.CharField(max_length=100, null=True)),
                ('ch_path', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_software', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_software')),
            ],
            options={
                'db_table': 'cl_Pc_software',
            },
        ),
        migrations.CreateModel(
            name='cl_Other_software',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_osname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('ch_system', models.CharField(max_length=100, null=True)),
                ('ch_path', models.CharField(max_length=100, null=True)),
                ('ch_software_license', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_software', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_software')),
            ],
            options={
                'db_table': 'cl_Other_software',
            },
        ),
        migrations.AddField(
            model_name='cl_os_license',
            name='ch_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_os_version'),
        ),
        migrations.CreateModel(
            name='cl_Newdb_server',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_dbname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=50, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('ch_software', models.CharField(max_length=100, null=True)),
                ('ch_software_license', models.CharField(max_length=100, null=True)),
                ('ch_system', models.CharField(max_length=100, null=True)),
                ('ch_path', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Newdb_server',
            },
        ),
        migrations.CreateModel(
            name='cl_New_middleware',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_midname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=50, null=True)),
                ('ch_system', models.CharField(max_length=100, null=True)),
                ('ch_software_license', models.CharField(max_length=100, null=True)),
                ('ch_path', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_software', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_software')),
            ],
            options={
                'db_table': 'cl_New_middleware',
            },
        ),
        migrations.AddField(
            model_name='cl_new_change',
            name='ch_caller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_person'),
        ),
        migrations.AddField(
            model_name='cl_new_change',
            name='ch_organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization'),
        ),
        migrations.AddField(
            model_name='cl_new_change',
            name='ch_parent_change',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_change'),
        ),
        migrations.CreateModel(
            name='cl_Network_device',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_ndname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('ch_location', models.CharField(max_length=100, null=True)),
                ('i_management_ip', models.IntegerField()),
                ('ch_ram', models.CharField(max_length=100, null=True)),
                ('i_rack_unit', models.IntegerField()),
                ('i_serial_number', models.IntegerField()),
                ('i_asset_number', models.IntegerField()),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('dt_purchase_date', models.DateTimeField()),
                ('dt_end_of_warranty', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_brand')),
                ('ch_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_model')),
                ('ch_network_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_network_type')),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('i_ios_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_ios_version')),
            ],
            options={
                'db_table': 'cl_Network_device',
            },
        ),
        migrations.CreateModel(
            name='cl_Middleware_instance',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_miname', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_middleware', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_middleware')),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Middleware_instance',
            },
        ),
        migrations.CreateModel(
            name='cl_Location',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_location_name', models.CharField(max_length=100, null=True)),
                ('txt_address', models.TextField(null=True)),
                ('ch_city', models.CharField(max_length=100, null=True)),
                ('i_pincode', models.IntegerField()),
                ('ch_country', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(default='active', max_length=100)),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Location',
            },
        ),
        migrations.CreateModel(
            name='cl_Ldapuser',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_ldapserver', models.CharField(max_length=100, null=True)),
                ('e_email', models.EmailField(max_length=254)),
                ('ch_login', models.CharField(max_length=100, null=True)),
                ('ch_language', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.cl_person')),
            ],
            options={
                'db_table': 'cl_Ldapuser',
            },
        ),
        migrations.CreateModel(
            name='cl_ITSM_USER',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_email', models.EmailField(max_length=254)),
                ('ch_login', models.CharField(max_length=100, null=True)),
                ('ch_language', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_password', models.CharField(max_length=100, null=True)),
                ('ch_password_expiration', models.CharField(max_length=100, null=True)),
                ('dt_password_renewed_on', models.DateTimeField()),
                ('ch_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.cl_person')),
            ],
            options={
                'db_table': 'cl_ITSM_USER',
            },
        ),
        migrations.CreateModel(
            name='cl_Externaluser',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_person_lastname', models.CharField(max_length=100, null=True)),
                ('e_email', models.EmailField(max_length=254)),
                ('ch_login', models.CharField(max_length=100, null=True)),
                ('ch_language', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=100, null=True)),
                ('ch_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tool.cl_person')),
            ],
            options={
                'db_table': 'cl_Externaluser',
            },
        ),
        migrations.CreateModel(
            name='cl_Document',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('ch_version', models.CharField(max_length=100, null=True)),
                ('txt_description', models.TextField()),
                ('txt_text', models.TextField(null=True)),
                ('url_URL', models.URLField(null=True)),
                ('disc_Attachment', models.FileField(upload_to='')),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Document',
            },
        ),
        migrations.CreateModel(
            name='cl_Delivery_model',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_application_name', models.CharField(max_length=50, null=True)),
                ('txt_description', models.TextField()),
                ('ch_oranization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Delivery_model',
            },
        ),
        migrations.CreateModel(
            name='cl_Database_schema',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_dsname', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_db_server', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_newdb_server')),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Database_schema',
            },
        ),
        migrations.CreateModel(
            name='cl_Customer_contract',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_cname', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(default='new', max_length=100)),
                ('ch_contract_type', models.CharField(max_length=100, null=True)),
                ('dt_start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('dt_end_date', models.DateTimeField(default=datetime.datetime.now)),
                ('i_cost_unit', models.IntegerField()),
                ('i_cost', models.IntegerField()),
                ('i_cost_currency', models.CharField(max_length=100)),
                ('i_billing_frequency', models.IntegerField()),
                ('txt_description', models.TextField()),
                ('ch_ccustomer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cl_new_organization_ch_ccustomer', to='tool.cl_new_organization')),
                ('ch_pprovider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cl_new_organization_ch_pprovider', to='tool.cl_new_organization')),
                ('ch_services', models.ManyToManyField(to='tool.cl_service')),
            ],
            options={
                'db_table': 'cl_Customer_contract',
            },
        ),
        migrations.CreateModel(
            name='cl_Business_process',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_business_name', models.CharField(max_length=100, null=True)),
                ('ch_status', models.CharField(max_length=50, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Business_process',
            },
        ),
        migrations.CreateModel(
            name='cl_Application_solution',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('ch_name', models.CharField(max_length=100, null=True)),
                ('ch_business_criticality', models.CharField(max_length=100, null=True)),
                ('dt_move_to_production_date', models.DateTimeField()),
                ('txt_description', models.TextField()),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
            ],
            options={
                'db_table': 'cl_Application_solution',
            },
        ),
        migrations.CreateModel(
            name='adminuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('ch_user_mobilenumber', models.IntegerField(max_length=15, null=True)),
                ('ch_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.cl_new_organization')),
                ('ch_user_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tool.roles')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('object', tool.managers.CustomUserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
